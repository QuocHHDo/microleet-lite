import { CheatSheetItem, createCheatSheet } from '@/common/commonCheatSheet';

export const stringCheatSheet: CheatSheetItem[] = [
  createCheatSheet(
    'Creating a string',
    'my_string = "Hello, World!"',
    'Initializes a string with the value "Hello, World!".',
    'create',
    'O(1)',
    'N/A',
  ),
  createCheatSheet(
    'String concatenation',
    'greeting = "Hello" + " " + "World!"',
    'Concatenates three strings into one: "Hello World!".',
    'create',
    'O(n + m)',
    'Concatenating large strings can be memory-intensive.',
  ),
  createCheatSheet(
    'String length',
    'length = len(my_string)',
    'Returns the length of the string.',
    'utility',
    'O(1)',
    'N/A',
  ),
  createCheatSheet(
    'Accessing characters',
    'first_char = my_string[0]',
    'Accesses the first character of the string.',
    'access',
    'O(1)',
    'Accessing an index out of bounds will raise an error.',
  ),
  createCheatSheet(
    'Slicing a string',
    'substring = my_string[1:5]',
    'Returns a substring from index 1 to 4 (5 is excluded).',
    'access',
    'O(k)',
    'Slicing a large string can be memory-intensive.',
  ),
  createCheatSheet(
    'String to uppercase',
    'upper_string = my_string.upper()',
    'Converts the string to uppercase.',
    'modify',
    'O(n)',
    'N/A',
  ),
  createCheatSheet(
    'String to lowercase',
    'lower_string = my_string.lower()',
    'Converts the string to lowercase.',
    'modify',
    'O(n)',
    'N/A',
  ),
  createCheatSheet(
    'Replacing substrings',
    'new_string = my_string.replace("World", "Universe")',
    'Replaces all occurrences of "World" with "Universe".',
    'modify',
    'O(n)',
    'N/A',
  ),
  createCheatSheet(
    'Finding substrings',
    'index = my_string.find("World")',
    'Returns the index of the first occurrence of "World".',
    'search',
    'O(n)',
    'Searching for a substring not in the string will return -1.',
  ),
  createCheatSheet(
    'Counting occurrences',
    'count = my_string.count("o")',
    'Returns the number of times "o" appears in the string.',
    'search',
    'O(n)',
    'N/A',
  ),
  createCheatSheet(
    'Checking if a string starts with a prefix',
    'starts_with = my_string.startswith("Hello")',
    'Returns True if the string starts with "Hello", otherwise False.',
    'search',
    'O(k)',
    'N/A',
  ),
  createCheatSheet(
    'Checking if a string ends with a suffix',
    'ends_with = my_string.endswith("World!")',
    'Returns True if the string ends with "World!", otherwise False.',
    'search',
    'O(k)',
    'N/A',
  ),
  createCheatSheet(
    'Splitting a string',
    'words = my_string.split(" ")',
    'Splits the string into a list of words using space as the delimiter.',
    'modify',
    'O(n)',
    'N/A',
  ),
  createCheatSheet(
    'Joining strings',
    'joined_string = "-".join(words)',
    'Joins the list of words into a single string with "-" as the separator.',
    'modify',
    'O(n)',
    'N/A',
  ),
  createCheatSheet(
    'Stripping whitespace',
    'stripped_string = my_string.strip()',
    'Removes leading and trailing whitespace from the string.',
    'modify',
    'O(n)',
    'N/A',
  ),
  createCheatSheet(
    'Checking if a string is alphanumeric',
    'is_alnum = my_string.isalnum()',
    'Returns True if all characters in the string are alphanumeric, otherwise False.',
    'search',
    'O(n)',
    'N/A',
  ),
  createCheatSheet(
    'Checking if a string is alphabetic',
    'is_alpha = my_string.isalpha()',
    'Returns True if all characters in the string are alphabetic, otherwise False.',
    'search',
    'O(n)',
    'N/A',
  ),
  createCheatSheet(
    'Checking if a string is numeric',
    'is_digit = my_string.isdigit()',
    'Returns True if all characters in the string are digits, otherwise False.',
    'search',
    'O(n)',
    'N/A',
  ),
  createCheatSheet(
    'Checking if a string is lowercase',
    'is_lower = my_string.islower()',
    'Returns True if all characters in the string are lowercase, otherwise False.',
    'search',
    'O(n)',
    'N/A',
  ),
  createCheatSheet(
    'Checking if a string is uppercase',
    'is_upper = my_string.isupper()',
    'Returns True if all characters in the string are uppercase, otherwise False.',
    'search',
    'O(n)',
    'N/A',
  ),
];
